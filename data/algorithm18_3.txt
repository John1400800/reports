Старт программы
   |
   v
[Инициализация: filename (string), searchChar (char), lines (TextLines)]
   |
   v
Цикл: если (argc >= 2) {
   |  |
   |  v
   |  Копировать аргумент argv[1] в filename
   |     |
   |     v
   |     Продолжить
   |     |
   |     v
   | Если (argc < 2) {
   |     |
   |     v
   |     Попросить пользователя ввести имя файла
   |     |
   |     v
   |     Прочитать имя файла
   |     |
   |     v
   |     Удалить символ новой строки в конце filename
   }
   |
   v
Открыть файл для чтения
   |
   v
Если файл не открыт, вывести ошибку и завершить программу
   |
   v
[Инициализация: lines = NULL, numLines = 0, maxLines = 10]
   |
   v
Прочитать текст из файла в структуру TextLines:
   |
   v
Цикл: пока (не конец файла) {
   |  |
   |  v
   |  Чтение данных в buffer
   |     |
   |     v
   |     Преобразовать buffer в строки длиной не более MAX_LINE_LENGTH
   |     |
   |     v
   |     Выделение памяти для новых строк
   |     |
   |     v
   |     Если (не удалось выделить память) {
   |         |
   |         v
   |         Освободить память и вернуть ошибку
   |     }
   |     |
   |     v
   |     Добавить строки в lines
   |     |
   |     v
   |     Преобразовать остаток текста в следующую строку
   }
   |
   v
Если (прочитали текст успешно) {
   |  |
   |  v
   |  Вывести строки
   |     |
   |     v
   |     Если (argc == 3) {
   |         |
   |         v
   |         Взять searchChar из argv[2]
   |     } иначе {
   |         |
   |         v
   |         Попросить пользователя ввести символ для поиска
   |         |
   |         v
   |         Прочитать символ
   |     }
   |
   v
Подсчитать количество вхождений символа в строках
   |
   v
Вывести количество вхождений символа
   |
   v
}
Если (не удалось прочитать файл) {
   |  |
   |  v
   |  Вывести ошибку чтения
   }
   |
   v
Закрыть файл
   |
   v
Освободить память, выделенную для строк
   |
   v
Конец программы
